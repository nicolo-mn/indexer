/*
 * This source file was generated by the Gradle 'init' task
 */
package indexer;

import indexer.controller.ConsoleController;
import indexer.model.MapTextIndexer;
import indexer.model.TextIndexer;
import indexer.model.tokenization.SimpleTokenizer;
import java.util.Set;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.io.TempDir;
import java.nio.file.Path;
import java.io.IOException;
import java.nio.file.Files;

import static org.junit.jupiter.api.Assertions.*;

public class AppTest {
    private TextIndexer indexer;
    @TempDir
    Path tempDir;

    @BeforeEach
    void setUp() {
        indexer = new MapTextIndexer(new ConsoleController(), new SimpleTokenizer());
    }

    @Test
    void testIndexAndSearchSingleFile() throws IOException {
        Path file = tempDir.resolve("test.txt");
        Files.write(file, "This is a test file".getBytes());

        indexer.index(file.toString());
        
        assertTrue(indexer.search("test").contains(file.toString()));
        assertTrue(indexer.search("file").contains(file.toString()));
        assertFalse(indexer.search("nonexistent").contains(file.toString()));
    }

    @Test
    void testIndexAndSearchDirectory() throws IOException {
        Path file1 = tempDir.resolve("test1.txt");
        Path file2 = tempDir.resolve("test2.txt");
        Files.write(file1, "This is the first test file".getBytes());
        Files.write(file2, "This is the second test file".getBytes());

        indexer.index(tempDir.toString());
        
        Set<String> results = indexer.search("test");
        assertTrue(results.contains(file1.toString()));
        assertTrue(results.contains(file2.toString()));
        
        results = indexer.search("first");
        assertTrue(results.contains(file1.toString()));
        assertFalse(results.contains(file2.toString()));
    }
}
